@startuml "RWA3 Class Diagram"
title RWA3 Class Diagram
skinparam ClassAttributeIconSize 0
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}

class Department {
    -employees_: std::unordered_set
    +Department(): void
    +display_employees(): void
    +add_employee(Employee): void
}

class Date {
    -day_: unsigned short
    -month_: unsigned short
    -year_: unsigned short
    +Date(unsigned short day, unsigned short month, unsigned short year): void
    +is_valid_date(): bool
    +get_days_in_month(): unsigned short
    +is_leap_year(): bool
    +print_date(): void
}

class IDBadge {
    -badge_number_: std::string
    -issue_date: Date 
    +IDBadge(const std::string& badge_number, const Date& issue_date): void
    +display_badge_info(): void
}

class Manager {
    -team_size_: unsigned short
    -number_of_projects_: unsigned short
    +Manager(const std::string& name, int salary, const IDBadge& idbadge, unsigned short team_size, unsigned short number_of_projects): void
    +conduct_performance_review(Developer): void
    +<<override>> perform_task(): void
    +<<override>> attend_meeting(): void
    +<<override>> recieve_salary(): void
}

class Developer {
    -programming_languages_: std::unordered_set
    -current_project_: std::string
    +Developer(const std::string& name, int salary, const IDBadge& idbadge): void
    +write_code(const std::string&): void
    +add_programming_language(const std::string&): void
    +set_current_project(const std::string&): void
    +<<override>> perform_task(): void
    +<<override>> attend_meeting(): void
    +<<override>> recieve_salary(): void
}


abstract class Employee {
    #name_: std::string
    #salary_: int
    #idbadge_: IDBadge
    +Employee(const std::string& name, int salary, const IDBadge& idbadge): void
    +virtual perform_task() = 0: void
    +virtual attend_meeting(): void
    +virtual receive_salary(): void
    +return_name(): std::string
    +return_badge_info(): void
}

'Relationships
Department "0..1" o-- "*" Employee : employs > 
Employee *-- "1" IDBadge : has <<unique>> >
IDBadge *-- "1" Date : has_issue_date<<value>> >
Employee <|-- Developer: +public
Employee <|-- Manager: +public

@enduml
