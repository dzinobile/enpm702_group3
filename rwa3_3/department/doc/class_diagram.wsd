@startuml "RWA3 Class Diagram"
title RWA3 Class Diagram
skinparam ClassAttributeIconSize 0
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}


class Department {
    -employees_: std::unordered_set
    +display_employees(): void
    +add_employee(Employee): void
}

class Date {
    -day_: ushort
    -month_: ushort
    -year_: ushort
    +is_valid_date(): bool
    +get_days_in_month(): ushort
    +is_leap_year(): bool
    +print_date(): void

}

class IDBadge{
    -badge_number_: std::string
    -issue_date: Date 
    +display_badge_info(): void
}

class Manager {
    -team_size_: ushort
    -number_of_projects_: ushort
    +conduct_performance_review(Developer): void
    

}

class Developer{
    -programming_languages_: std::unordered_set
    -current_project_: std::string
    +write_code(const std::string&): void
    +add_programming_language(const std::string&): void
    +void set_current_project(const std::string&): void
}

'Employee class
abstract class Employee {
    #name_: std::string
    #salary_: int
    #idbadge_: IDBadge
    +{abstract}perform_task() = 0: void
    +{abstract}attend_meeting(): void
    +{abstract}recieve_salary(): void
    +{abstract}return_name(): void

}

'Relationships
Department  "0..1" o-- "*" Employee : employs > 
Employee  *-- "1" IDBadge : has <<unique>> >
IDBadge  *-- "1" Date : has_issue_date<<value>> >
Employee <|-- Developer: +public
Employee <|-- Manager: +public


@enduml